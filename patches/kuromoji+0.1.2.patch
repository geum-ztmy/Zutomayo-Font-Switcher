diff --git a/node_modules/kuromoji/.DS_Store b/node_modules/kuromoji/.DS_Store
new file mode 100644
index 0000000..598d617
Binary files /dev/null and b/node_modules/kuromoji/.DS_Store differ
diff --git a/node_modules/kuromoji/dict/base.dat.gz b/node_modules/kuromoji/dict/base.dat.gzip
similarity index 100%
rename from node_modules/kuromoji/dict/base.dat.gz
rename to node_modules/kuromoji/dict/base.dat.gzip
diff --git a/node_modules/kuromoji/dict/cc.dat.gz b/node_modules/kuromoji/dict/cc.dat.gzip
similarity index 100%
rename from node_modules/kuromoji/dict/cc.dat.gz
rename to node_modules/kuromoji/dict/cc.dat.gzip
diff --git a/node_modules/kuromoji/dict/check.dat.gz b/node_modules/kuromoji/dict/check.dat.gzip
similarity index 100%
rename from node_modules/kuromoji/dict/check.dat.gz
rename to node_modules/kuromoji/dict/check.dat.gzip
diff --git a/node_modules/kuromoji/dict/tid.dat.gz b/node_modules/kuromoji/dict/tid.dat.gzip
similarity index 100%
rename from node_modules/kuromoji/dict/tid.dat.gz
rename to node_modules/kuromoji/dict/tid.dat.gzip
diff --git a/node_modules/kuromoji/dict/tid_map.dat.gz b/node_modules/kuromoji/dict/tid_map.dat.gzip
similarity index 100%
rename from node_modules/kuromoji/dict/tid_map.dat.gz
rename to node_modules/kuromoji/dict/tid_map.dat.gzip
diff --git a/node_modules/kuromoji/dict/tid_pos.dat.gz b/node_modules/kuromoji/dict/tid_pos.dat.gzip
similarity index 100%
rename from node_modules/kuromoji/dict/tid_pos.dat.gz
rename to node_modules/kuromoji/dict/tid_pos.dat.gzip
diff --git a/node_modules/kuromoji/dict/unk.dat.gz b/node_modules/kuromoji/dict/unk.dat.gzip
similarity index 100%
rename from node_modules/kuromoji/dict/unk.dat.gz
rename to node_modules/kuromoji/dict/unk.dat.gzip
diff --git a/node_modules/kuromoji/dict/unk_char.dat.gz b/node_modules/kuromoji/dict/unk_char.dat.gzip
similarity index 100%
rename from node_modules/kuromoji/dict/unk_char.dat.gz
rename to node_modules/kuromoji/dict/unk_char.dat.gzip
diff --git a/node_modules/kuromoji/dict/unk_compat.dat.gz b/node_modules/kuromoji/dict/unk_compat.dat.gzip
similarity index 100%
rename from node_modules/kuromoji/dict/unk_compat.dat.gz
rename to node_modules/kuromoji/dict/unk_compat.dat.gzip
diff --git a/node_modules/kuromoji/dict/unk_invoke.dat.gz b/node_modules/kuromoji/dict/unk_invoke.dat.gzip
similarity index 100%
rename from node_modules/kuromoji/dict/unk_invoke.dat.gz
rename to node_modules/kuromoji/dict/unk_invoke.dat.gzip
diff --git a/node_modules/kuromoji/dict/unk_map.dat.gz b/node_modules/kuromoji/dict/unk_map.dat.gzip
similarity index 100%
rename from node_modules/kuromoji/dict/unk_map.dat.gz
rename to node_modules/kuromoji/dict/unk_map.dat.gzip
diff --git a/node_modules/kuromoji/dict/unk_pos.dat.gz b/node_modules/kuromoji/dict/unk_pos.dat.gzip
similarity index 100%
rename from node_modules/kuromoji/dict/unk_pos.dat.gz
rename to node_modules/kuromoji/dict/unk_pos.dat.gzip
diff --git a/node_modules/kuromoji/src/loader/DictionaryLoader.js b/node_modules/kuromoji/src/loader/DictionaryLoader.js
index 5f88c0b..ed69460 100644
--- a/node_modules/kuromoji/src/loader/DictionaryLoader.js
+++ b/node_modules/kuromoji/src/loader/DictionaryLoader.js
@@ -47,7 +47,7 @@ DictionaryLoader.prototype.load = function (load_callback) {
     async.parallel([
         // Trie
         function (callback) {
-            async.map([ "base.dat.gz", "check.dat.gz" ], function (filename, _callback) {
+            async.map([ "base.dat.gzip", "check.dat.gzip" ], function (filename, _callback) {
                 loadArrayBuffer(path.join(dic_path, filename), function (err, buffer) {
                     if(err) {
                         return _callback(err);
@@ -67,7 +67,7 @@ DictionaryLoader.prototype.load = function (load_callback) {
         },
         // Token info dictionaries
         function (callback) {
-            async.map([ "tid.dat.gz", "tid_pos.dat.gz", "tid_map.dat.gz" ], function (filename, _callback) {
+            async.map([ "tid.dat.gzip", "tid_pos.dat.gzip", "tid_map.dat.gzip" ], function (filename, _callback) {
                 loadArrayBuffer(path.join(dic_path, filename), function (err, buffer) {
                     if(err) {
                         return _callback(err);
@@ -88,7 +88,7 @@ DictionaryLoader.prototype.load = function (load_callback) {
         },
         // Connection cost matrix
         function (callback) {
-            loadArrayBuffer(path.join(dic_path, "cc.dat.gz"), function (err, buffer) {
+            loadArrayBuffer(path.join(dic_path, "cc.dat.gzip"), function (err, buffer) {
                 if(err) {
                     return callback(err);
                 }
@@ -99,7 +99,7 @@ DictionaryLoader.prototype.load = function (load_callback) {
         },
         // Unknown dictionaries
         function (callback) {
-            async.map([ "unk.dat.gz", "unk_pos.dat.gz", "unk_map.dat.gz", "unk_char.dat.gz", "unk_compat.dat.gz", "unk_invoke.dat.gz" ], function (filename, _callback) {
+            async.map([ "unk.dat.gzip", "unk_pos.dat.gzip", "unk_map.dat.gzip", "unk_char.dat.gzip", "unk_compat.dat.gzip", "unk_invoke.dat.gzip" ], function (filename, _callback) {
                 loadArrayBuffer(path.join(dic_path, filename), function (err, buffer) {
                     if(err) {
                         return _callback(err);
